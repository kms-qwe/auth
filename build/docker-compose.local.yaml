version: '3'


volumes:
  auth_postgres_volume:
  auth_redis-data:

services:
  auth:
    build:
      context: ..
      dockerfile: ./build/Dockerfile
      args:
        PATH_TO_CONFIG_FILE: "./config/local.env"
    container_name: 
      auth-container
    depends_on:
      auth-migrator:
        condition: service_completed_successfully
      auth-redis:
        condition: service_healthy
    ports:
      - ${GPRC_OUTER_PORT}:${GPRC_INNER_PORT}
    environment:
      - TZ=Europe/Moscow

  

  auth-redis:
    image: redis:7.2.5-alpine3.20
    container_name: auth-redis-container
    ports:
      - "${REDIS_OUTER_PORT}:${REDIS_INNER_PORT}"
    volumes:
      - auth_redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 3

  auth-pg:
    image: postgres:14-alpine3.17
    container_name: 
      auth-pg-container
    env_file:
      - ".env"
    ports:
      - "${PG_OUTER_PORT}:${PG_INNER_PORT}"
    volumes:
      - auth_postgres_volume:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $POSTGRES_USER -d $POSTGRES_DB"]
      interval: 5s
      timeout: 5s
      retries: 5
  
  auth-migrator:
    build:
      context: ..
      dockerfile: ./build/migration.Dockerfile 
      args:
        MIGRATION_DIR: "./migration"
    container_name: 
      auth-migrator-container
    depends_on:
      auth-pg:
        condition: service_healthy
    env_file:
      - ".env"

